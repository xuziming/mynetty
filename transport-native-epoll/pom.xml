<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>io.netty</groupId>
        <artifactId>netty-parent</artifactId>
        <version>4.0.29.Final</version>
    </parent>
    <artifactId>netty-transport-native-epoll</artifactId>
    <name>Netty/Transport/Native/Epoll</name>
    <packaging>jar</packaging>
    <dependencies>
        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-common</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-buffer</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-transport</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-testsuite</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>netty-tcnative</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <plugin>
                <groupId>org.fusesource.hawtjni</groupId>
                <artifactId>maven-hawtjni-plugin</artifactId>
                <executions>
                    <execution>
                        <id>build-native-lib</id>
                        <configuration>
                            <nativeSourceDirectory>${project.basedir}/src/main/c</nativeSourceDirectory>
                            <libDirectory>${project.build.outputDirectory}</libDirectory>
                            <!-- We use Maven's artifact classifier instead. This hack will make 
								the hawtjni plugin to put the native library under 'META-INF/native' rather 
								than 'META-INF/native/${platform}'. -->
                            <platform>.</platform>
                            <forceConfigure>true</forceConfigure>
                            <forceAutogen>true</forceAutogen>
                            <configureArgs>
                                <arg>${jni.compiler.args}</arg>
                            </configureArgs>
                        </configuration>
                        <goals>
                            <goal>generate</goal>
                            <goal>build</goal>
                        </goals>
                        <phase>compile</phase>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <executions>
                    <!-- Generate the fallback JAR that does not contain the native library. -->
                    <execution>
                        <id>default-jar</id>
                        <configuration>
                            <excludes>
                                <exclude>META-INF/native/**</exclude>
                            </excludes>
                        </configuration>
                    </execution>
                    <!-- Generate the JAR that contains the native library in it. -->
                    <execution>
                        <id>native-jar</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                        <configuration>
                            <classifier>${os.detected.classifier}</classifier>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <!-- <version>1.7</version> -->
                <executions>
                    <execution>
                        <!-- Phase must be before regex-glibc-sendmmsg and regex-linux-sendmmsg -->
                        <phase>validate</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <id>ant-get-systeminfo</id>
                        <configuration>
                            <exportAntProperties>true</exportAntProperties>
                            <tasks>
                                <exec executable="sh" outputproperty="ldd_version">
                                    <arg value="-c"/>
                                    <arg value="ldd --version | head -1"/>
                                </exec>
                                <exec executable="uname" outputproperty="uname_os_version">
                                    <arg value="-r"/>
                                </exec>
                            </tasks>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
